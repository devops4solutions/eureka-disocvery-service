name: "Eureka Service Build and Terraform Deployment"
on:
  # Manual trigger
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
  pull_request:
    branches: [ main ]

jobs:
  build:
     name: Maven Build
     runs-on: [ ubuntu-latest ]
     steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn package
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: helloworld-eureka-svc.jar
          path: MicroService-ServiceDisocveryEureka/target/helloworld-eureka-svc.jar
  docker-build:
    needs: build
    runs-on: [ ubuntu-latest ]
    steps:
    - uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1 

    - name: Login to Public ECR
      uses: docker/login-action@v1
      with:
        registry: public.ecr.aws

    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
          name: helloworld-eureka-svc.war

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
       ECR_REGISTRY: public.ecr.aws/w0f5g4k6
       ECR_REPOSITORY: eurekasvc
       IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
 